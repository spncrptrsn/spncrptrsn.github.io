Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_ABST_PhysProcStatus("OVR_BLEEDING","BLEEDING",12.0);
DB_ABST_PhysProcStatus("OVR_CHICKEN","CHICKEN",6.0);
DB_ABST_PhysProcStatus("OVR_CRIPPLED","CRIPPLED",12.0);
DB_ABST_PhysProcStatus("OVR_DAZED","DAZED",12.0);
DB_ABST_PhysProcStatus("OVR_DECAYING_TOUCH","DECAYING_TOUCH",12.0);
DB_ABST_PhysProcStatus("OVR_DEMONIC_BARGAIN","DEMONIC_BARGAIN",6.0);
DB_ABST_PhysProcStatus("OVR_DISARMED","DISARMED",12.0);
DB_ABST_PhysProcStatus("OVR_DISEASED","DISEASED",12.0);
//DB_ABST_PhysProcStatus("OVR_REGENERATION","REGENERATION",12.0);
DB_ABST_PhysProcStatus("OVR_INFECTIOUS_DISEASED","INFECTIOUS_DISEASED",12.0);
DB_ABST_PhysProcStatus("OVR_KNOCKED_DOWN","KNOCKED_DOWN",6.0);
//DB_ABST_PhysProcStatus("OVR_TAUNTED","TAUNTED",6.0);
DB_ABST_PhysProcStatus("OVR_WEAK","WEAK",12.0);

DB_ABST_MagProcStatus("OVR_BLIND","BLIND",12.0);
DB_ABST_MagProcStatus("OVR_BURNING","BURNING",12.0);
DB_ABST_MagProcStatus("OVR_CHARMED","CHARMED",6.0);
DB_ABST_MagProcStatus("OVR_CHILLED","CHILLED",12.0);
DB_ABST_MagProcStatus("OVR_CURSED","CURSED",12.0);
DB_ABST_MagProcStatus("OVR_DEAF","DEAF",12.0);
DB_ABST_MagProcStatus("OVR_ENTANGLED","ENTANGLED",12.0);
DB_ABST_MagProcStatus("OVR_FEAR","FEAR",6.0);
DB_ABST_MagProcStatus("OVR_FIREBLOOD","FIREBLOOD",12.0);
DB_ABST_MagProcStatus("OVR_FROZEN","FROZEN",6.0);
DB_ABST_MagProcStatus("OVR_MADNESS","MADNESS",6.0);
DB_ABST_MagProcStatus("OVR_MUTED","MUTED",12.0);
DB_ABST_MagProcStatus("OVR_NECROFIRE","NECROFIRE",12.0);
DB_ABST_MagProcStatus("OVR_NULL_RESISTANCE","NULL_RESISTANCE",12.0);
DB_ABST_MagProcStatus("OVR_PETRIFIED","PETRIFIED",6.0);
DB_ABST_MagProcStatus("OVR_POISONED","POISONED",12.0);
DB_ABST_MagProcStatus("OVR_SHOCKED","SHOCKED",12.0);
DB_ABST_MagProcStatus("OVR_SLEEPING","SLEEPING",6.0);
DB_ABST_MagProcStatus("OVR_SLOWED","SLOWED",12.0);
DB_ABST_MagProcStatus("OVR_STUNNED","STUNNED",6.0);
DB_ABST_MagProcStatus("OVR_DRAIN","DRAIN",6.0);

DB_ABST_SurfaceStatus("BURNING","SurfaceExplosionCloud");
DB_ABST_SurfaceStatus("BURNING","SurfaceFire");
DB_ABST_SurfaceStatus("BURNING","SurfaceFireCloud");
DB_ABST_SurfaceStatus("CHILLED","SurfaceFrostCloud");
DB_ABST_SurfaceStatus("CHILLED","SurfaceBloodFrozenCursed");
DB_ABST_SurfaceStatus("CHILLED","SurfaceWaterFrozenCursed");
DB_ABST_SurfaceStatus("NECROFIRE","SurfaceFireCloudCursed");
DB_ABST_SurfaceStatus("NECROFIRE","SurfaceFireCursed");
DB_ABST_SurfaceStatus("NECROFIRE","SurfaceOilCursed");
//DB_ABST_SurfaceStatus("REGENERATION","SurfacePoisonBlessed");
//DB_ABST_SurfaceStatus("REGENERATION","SurfacePoisonCloudBlessed");
DB_ABST_SurfaceStatus("POISONED","SurfacePoisonCloud");
DB_ABST_SurfaceStatus("POISONED","SurfacePoison");
DB_ABST_SurfaceStatus("POISONED","SurfacePoisonCloudCursed");
DB_ABST_SurfaceStatus("POISONED","SurfacePoisonCursed");
DB_ABST_SurfaceStatus("BLIND","SurfaceSmokeCloudCursed");
DB_ABST_SurfaceStatus("DECAYING_TOUCH","SurfaceBloodCursed");
DB_ABST_SurfaceStatus("DECAYING_TOUCH","SurfaceWaterCursed");
DB_ABST_SurfaceStatus("DECAYING_TOUCH","SurfaceWaterCloudCursed");
DB_ABST_SurfaceStatus("DECAYING_TOUCH","SurfaceBloodCloudCursed");
DB_ABST_SurfaceStatus("SHOCKED","SurfaceWaterElectrified");
DB_ABST_SurfaceStatus("SHOCKED","SurfaceWaterCloudElectrified");
DB_ABST_SurfaceStatus("SHOCKED","SurfaceBloodElectrified");
DB_ABST_SurfaceStatus("SHOCKED","SurfaceBloodCloudElectrified");
DB_ABST_SurfaceStatus("STUNNED","SurfaceWaterElectrifiedCursed");
DB_ABST_SurfaceStatus("STUNNED","SurfaceBloodElectrifiedCursed");
DB_ABST_SurfaceStatus("STUNNED","SurfaceBloodCloudElectrifiedCursed");
DB_ABST_SurfaceStatus("STUNNED","SurfaceWaterCloudElectrifiedCursed");
DB_ABST_SurfaceStatus("FROZEN","SurfaceWaterFrozenCursed");
DB_ABST_SurfaceStatus("FROZEN","SurfaceBloodFrozenCursed");

DB_ABST_IgnoreSurface("KNOCKED_DOWN","SurfaceWaterFrozen");
DB_ABST_IgnoreSurface("KNOCKED_DOWN","SurfaceBloodFrozen");
DB_ABST_IgnoreSurface("SLOWED","SurfaceOil");
DB_ABST_IgnoreSurface("SLOWED","SurfaceOilCursed");

DB_ABST_WeaponStatus("WEP_BLEEDING_25","BLEEDING","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_BURNING_25","BURNING","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_NECROFIRE_25","NECROFIRE","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_POISONED_25","POISONED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_SHOCKED_25","SHOCKED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHILLED_25","CHILLED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_BLIND_25","BLIND","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_CRIPPLED_25","CRIPPLED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_CURSED_25","CURSED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_DECAYING_TOUCH_25","DECAYING_TOUCH","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISEASED_25","DISEASED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISARMED_25","DISARMED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_INFECTIOUS_DISEASED_25","INFECTIOUS_DISEASED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLOWED_25","SLOWED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_MUTED_25","MUTED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_KNOCKED_DOWN_25","KNOCKED_DOWN","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHARMED_25","CHARMED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_FEAR_25","FEAR","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_FROZEN_25","FROZEN","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_PETRIFIED_25","PETRIFIED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_STUNNED_25","STUNNED","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLEEPING_25","SLEEPING","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_WEAK_25","WEAK","LowArmorWeapon");
DB_ABST_WeaponStatus("WEP_NULL_RESISTANCE_25","NULL_RESISTANCE","LowArmorWeapon");

DB_ABST_WeaponStatus("WEP_BLEEDING_50","BLEEDING","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_BURNING_50","BURNING","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_NECROFIRE_50","NECROFIRE","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_POISONED_50","POISONED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_SHOCKED_50","SHOCKED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHILLED_50","CHILLED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_BLIND_50","BLIND","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_CRIPPLED_50","CRIPPLED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_CURSED_50","CURSED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_DECAYING_TOUCH_50","DECAYING_TOUCH","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISEASED_50","DISEASED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISARMED_50","DISARMED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_INFECTIOUS_DISEASED_50","INFECTIOUS_DISEASED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLOWED_50","SLOWED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_MUTED_50","MUTED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_KNOCKED_DOWN_50","KNOCKED_DOWN","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHARMED_50","CHARMED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_FEAR_50","FEAR","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_FROZEN_50","FROZEN","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_PETRIFIED_50","PETRIFIED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_STUNNED_50","STUNNED","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLEEPING_50","SLEEPING","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_WEAK_50","WEAK","MediumArmorWeapon");
DB_ABST_WeaponStatus("WEP_NULL_RESISTANCE_50","NULL_RESISTANCE","MediumArmorWeapon");

DB_ABST_WeaponStatus("WEP_BLEEDING_75","BLEEDING","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_BURNING_75","BURNING","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_NECROFIRE_75","NECROFIRE","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_POISONED_75","POISONED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_SHOCKED_75","SHOCKED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHILLED_75","CHILLED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_BLIND_75","BLIND","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_CRIPPLED_75","CRIPPLED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_CURSED_75","CURSED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_DECAYING_TOUCH_75","DECAYING_TOUCH","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISEASED_75","DISEASED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_DISARMED_75","DISARMED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_INFECTIOUS_DISEASED_75","INFECTIOUS_DISEASED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLOWED_75","SLOWED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_MUTED_75","MUTED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_KNOCKED_DOWN_75","KNOCKED_DOWN","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_CHARMED_75","CHARMED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_FEAR_75","FEAR","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_FROZEN_75","FROZEN","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_PETRIFIED_75","PETRIFIED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_STUNNED_75","STUNNED","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_SLEEPING_75","SLEEPING","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_WEAK_75","WEAK","HighArmorWeapon");
DB_ABST_WeaponStatus("WEP_NULL_RESISTANCE_75","NULL_RESISTANCE","HighArmorWeapon");

DB_ABST_RealTurns(1,6.0);
DB_ABST_RealTurns(2,12.0);
DB_ABST_RealTurns(3,18.0);
DB_ABST_RealTurns(4,24.0);

DB_ABST_MagProcStatus("OVR_ARCANE_DISTURBANCE_AURA","ARCANE_DISTURBANCE_AURA",6.0);
DB_ABST_MagProcStatus("OVR_AQUA_LOCK","AQUA_LOCK",6.0);
DB_ABST_MagProcStatus("OVR_BLUR_ENEMY","BLUR_ENEMY",6.0);
DB_ABST_MagProcStatus("OVR_BURNING_PINK","BURNING_PINK",6.0);
DB_ABST_MagProcStatus("OVR_CELESTIAL_BURN","CELESTIAL_BURN",6.0);
DB_ABST_MagProcStatus("OVR_CONE_OF_FORCE","CONE_OF_FORCE",6.0);
DB_ABST_MagProcStatus("OVR_CONTAGIOUS","CONTAGIOUS",6.0);
DB_ABST_MagProcStatus("OVR_CRYOMANCER_FROSTBITE","CRYOMANCER_FROSTBITE",6.0);
DB_ABST_MagProcStatus("OVR_DAZED_MAGIC","DAZED_MAGIC",6.0);
DB_ABST_MagProcStatus("OVR_DEADLY_TERRIFIED","DEADLY_TERRIFIED",6.0);
DB_ABST_MagProcStatus("OVR_DISRUPT_TIME_ENEMY","DISRUPT_TIME_ENEMY",6.0);
DB_ABST_MagProcStatus("OVR_DISRUPT_TIME_AURA","DISRUPT_TIME_AURA",6.0);
DB_ABST_MagProcStatus("OVR_ENERVATING_RESISTANCE","ENERVATING_RESISTANCE",6.0);
DB_ABST_MagProcStatus("OVR_GLUED","GLUED",6.0);
DB_ABST_MagProcStatus("OVR_HARPY_TUMBLE","HARPY_TUMBLE",6.0);
DB_ABST_MagProcStatus("OVR_HELAENE_MIRAGE_SANDSTORM","HELAENE_MIRAGE_SANDSTORM",6.0);
DB_ABST_MagProcStatus("OVR_HELAENE_WYLDFAE_ENTANGLED","HELAENE_WYLDFAE_ENTANGLED",6.0);
DB_ABST_MagProcStatus("OVR_HELAENE_WYLDFAE_FAEFYRE","HELAENE_WYLDFAE_FAEFYRE",6.0);
DB_ABST_MagProcStatus("OVR_HELAENE_WYLDFAE_STATUS_QUICKSAND","HELAENE_WYLDFAE_STATUS_QUICKSAND",6.0);
DB_ABST_MagProcStatus("OVR_IMMUTABLE_SENTINEL_AURA","IMMUTABLE_SENTINEL_AURA",6.0);
DB_ABST_MagProcStatus("OVR_IN_THRALL","IN_THRALL",6.0);
DB_ABST_MagProcStatus("OVR_MAGE_HAND","MAGE_HAND",6.0);
DB_ABST_MagProcStatus("OVR_MOLTEN","MOLTEN",6.0);
DB_ABST_MagProcStatus("OVR_MOLTENS2","MOLTENS2",6.0);
DB_ABST_MagProcStatus("OVR_MOLTENS3","MOLTENS3",6.0);
DB_ABST_MagProcStatus("OVR_NULLIFY_RESIST","NULLIFY_RESIST",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_INCINERATEPROC","OdinPyro_INCINERATEPROC",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_PURIFYINGFIRE","OdinPyro_PURIFYINGFIRE",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_PURIFYINGFIRE_ENEMY","OdinPyro_PURIFYINGFIRE_ENEMY",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_SNARED","OdinPyro_SNARED",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_SMOLDER","OdinPyro_SMOLDER",6.0);
DB_ABST_MagProcStatus("OVR_OdinPyro_SMOLDER_AURA","OdinPyro_SMOLDER_AURA",6.0);
DB_ABST_MagProcStatus("OVR_PRESSUREDHEART","PRESSUREDHEART",6.0);
DB_ABST_MagProcStatus("OVR_PURGE","PURGE",6.0);
DB_ABST_MagProcStatus("OVR_ROTTING","ROTTING",6.0);
DB_ABST_MagProcStatus("OVR_SHADE_Fading","SHADE_Fading",6.0);
DB_ABST_MagProcStatus("OVR_SILVERMOON","SILVERMOON",6.0);
DB_ABST_MagProcStatus("OVR_STATUS_THEFT","STATUS_THEFT",6.0);
DB_ABST_MagProcStatus("OVR_TRICKSTER_RABBIT","TRICKSTER_RABBIT",6.0);
DB_ABST_MagProcStatus("OVR_VAMPIRE_BLOODBOILING","VAMPIRE_BLOODBOILING",6.0);

DB_ABST_PhysProcStatus("OVR_ANAEMIA","ANAEMIA",6.0);
DB_ABST_PhysProcStatus("OVR_ATTENUATE","ATTENUATE",6.0);
DB_ABST_PhysProcStatus("OVR_DEATH_TOUCHED","DEATH_TOUCHED",6.0);
DB_ABST_PhysProcStatus("OVR_DECELERATED","DECELERATED",6.0);
DB_ABST_PhysProcStatus("OVR_LEID","LEID",6.0);
DB_ABST_PhysProcStatus("OVR_ODINBLADEWITHER","ODINBLADEWITHER",6.0);
DB_ABST_PhysProcStatus("OVR_REJECTED_BONES","REJECTED_BONES",6.0);
DB_ABST_PhysProcStatus("OVR_RUSTED","RUSTED",6.0);
DB_ABST_PhysProcStatus("OVR_SLOTH","SLOTH",6.0);
DB_ABST_PhysProcStatus("OVR_TIME_LOST","TIME_LOST",6.0);
DB_ABST_PhysProcStatus("OVR_VAMPIRE_BITTEN","VAMPIRE_BITTEN",18.0);
DB_ABST_PhysProcStatus("OVR_VAMPIRE_IMPALED","VAMPIRE_IMPALED",6.0);
DB_ABST_PhysProcStatus("OVR_VAMPIRE_MAIMED","VAMPIRE_MAIMED",18.0);
DB_ABST_PhysProcStatus("OVR_VAMPIRE_RAVAGED","VAMPIRE_RAVAGED",18.0);
DB_ABST_PhysProcStatus("OVR_WEAK2","WEAK2",6.0);

DB_ABST_AuraStatus("BLINDING_RADIANCE","BLIND",5.0);
DB_ABST_AuraStatus("MEDUSA_HEAD","PETRIFIED",3.0);
DB_ABST_AuraStatus("VACUUM_AURA","MUTED",8.0);
DB_ABST_AuraStatus("QUEST_SILENCE_AURA","MUTED",20.0);
DB_ABST_AuraStatus("QUEST_FEAR_AURA","FEAR",20.0);
DB_ABST_AuraStatus("QUEST_POISON_AURA","POISONED",20.0);				

DB_ABST_AuraStatus("BLEEDING_AURA","MUTED",8.0);
DB_ABST_AuraStatus("CHILLED_AURA","MUTED",8.0);
DB_ABST_AuraStatus("SLOWED_AURA","MUTED",8.0);
DB_ABST_AuraStatus("BURNING_AURA","MUTED",8.0);
DB_ABST_AuraStatus("POISONED_AURA","MUTED",8.0);
DB_ABST_AuraStatus("PESTILENTCHAMP","DECAYING_TOUCH",10.0);
DB_ABST_AuraStatus("AURA_DES_FROSTS","CHILLED",5.0);
DB_ABST_AuraStatus("FARSIGHT_AURA","BLIND",12.0);
DB_ABST_AuraStatus("DISRUPT_TIME_AURA","DISRUPT_TIME_ENEMY",4.0);
DB_ABST_AuraStatus("BLUR_AURA","BLUR_ENEMY",2.0);
DB_ABST_AuraStatus("AURA_DER_UNHEILIGEN","DECAYING_TOUCH",5.0);
DB_ABST_AuraStatus("AURA_DES_LEIDS","LEID",5.0);
DB_ABST_AuraStatus("WMMuteAuraTier5","MUTED",4.0);
DB_ABST_AuraStatus("WMMuteAuraTier4","MUTED",2.0);
DB_ABST_AuraStatus("WEAKENING_AURA","WEAK",4.0);
DB_ABST_AuraStatus("SUMMON_WEAKAURA","WEAK",4.0);
DB_ABST_AuraStatus("SANGUINE_ANGEL_AURA_RD56","BLEEDING",2.0);
DB_ABST_AuraStatus("NULLIFY_RESIST_AURA","NULLIFY_RESIST",8.0);

//DB_ABST_DomeStatus("Dome_ODINBLADESPECTREDomeOfTheWeak","ODINBLADEWITHER","3.0","3");
//DB_ABST_DomeStatus("Dome_SHADENullZone","MUTED","3.0","2");
//DB_ABST_DomeStatus("Dome_SHADENullZone","DAZED","3.0","2");
//DB_ABST_DomeStatus("Dome_DisturbanceField","DECELERATED","4.0","5");
//DB_ABST_DomeStatus("Dome_Helaene_Wyldfae_Quicksand","HELAENE_WYLDFAE_STATUS_QUICKSAND","2.0","2");
//DB_ABST_DomeStatus("Dome_Vampire_BloodSigil","BLEEDING","2.0","3");
//DB_ABST_DomeStatus("Dome_Vampire_BloodSigil","CRIPPLED","2.0","3");
//DB_ABST_DomeStatus("Dome_Priest_Sanctuary","CRIPPLED","5.0","2");
//DB_ABST_DomeStatus("Dome_Helaene_Mirage_Sandstorm","BLIND","5.0","2");
//DB_ABST_DomeStatus("Dome_Helaene_Mirage_Sandstorm","HELAENE_MIRAGE_SANDSTORM","5.0","2");
//DB_ABST_DomeStatus("Dome_Helaene_Mirage_Sandstorm","SLOWED","5.0","2");
//DB_ABST_DomeStatus("Dome_Cryomancer_IceDome","FROZEN","2.0","3");
//DB_ABST_DomeStatus("Dome_WM_BallisticCoverTier7","SLOWED","9.0","3");
//DB_ABST_DomeStatus("Dome_WM_BallisticCoverTier7","DECAYING_TOUCH","9.0","3");
//DB_ABST_DomeStatus("Dome_DisturbanceField","DECELERATED","4.0","5");
//DB_ABST_DomeStatus("Dome_Eclipse","MADNESS","8.0","2");
KBSECTION
IF
CharacterStatusAttempt((CHARACTERGUID)_Char,(STRING)_Status,(CHARACTERGUID)_Caster)
AND
ObjectGetFlag(_Char,"ABST_StatusBypass",0)
AND
DB_ABST_PhysProcStatus(_Attempt,_Status,_)
AND
CharacterGetArmorPercentage(_Char,(REAL)_PhysArmor)
AND
_PhysArmor > 0
AND
NOT QRY_ABST_SurfaceConcern(_Char,_Status)
//AND
//QRY_ABST_SurfaceBoost(_Char,_Caster,_Status)
THEN
SetVarObject(_Char,"ABST_Caster",_Caster);
ApplyStatus(_Char,(STRING)_Attempt,6.0,0,_Caster);

IF
CharacterStatusAttempt((CHARACTERGUID)_Char,(STRING)_Status,(CHARACTERGUID)_Caster)
AND
ObjectGetFlag(_Char,"ABST_StatusBypass",0)
AND
DB_ABST_MagProcStatus(_Attempt,_Status,_)
AND
CharacterGetMagicArmorPercentage(_Char,(REAL)_MagicArmor)
AND
_MagicArmor > 0
AND 
NOT QRY_ABST_PoisonCheck(_Char,_Status)
AND
NOT QRY_ABST_SurfaceConcern(_Char,_Status)
//AND
//QRY_ABST_SurfaceBoost(_Char,_Caster,_Status)  
THEN
SetVarObject(_Char,"ABST_Caster",_Caster);
ApplyStatus(_Char,(STRING)_Attempt,6.0,0,_Caster);

QRY
QRY_ABST_SurfaceBoost((CHARACTERGUID)_Char,(CHARACTERGUID)_Caster,(STRING)_Status)
AND
DB_ABST_SurfaceStatus(_Status,_Surface)
AND
GetSurfaceGroundAt(_Char,(STRING)_Surface)
AND
GetSurfaceGroundOwnerAt(_Char,_Caster,_)
THEN
ObjectSetFlag(_Char,"ABST_SurfaceFlag");

QRY
QRY_ABST_SurfaceBoost((CHARACTERGUID)_Char,(CHARACTERGUID)_Caster,(STRING)_Status)
AND
DB_ABST_SurfaceStatus(_Status,_Surface)
AND
GetSurfaceCloudAt(_Char,(STRING)_Surface)
AND
GetSurfaceCloudOwnerAt(_Char,_Caster,_)
THEN
ObjectSetFlag(_Char,"ABST_SurfaceFlag");

QRY
QRY_ABST_SurfaceBoost((CHARACTERGUID)_Char,(CHARACTERGUID)_Caster,(STRING)_Status)
THEN
DB_NOOP(1);

QRY
QRY_ABST_SurfaceConcern((CHARACTERGUID)_Char,(STRING)_Status)
AND
DB_ABST_IgnoreSurface(_Status,_Surface)
AND
GetSurfaceGroundAt(_Char,(STRING)_Surface)
THEN
DB_NOOP(1);

QRY
QRY_ABST_PoisonCheck((CHARACTERGUID)_Char,(STRING)_Status)
AND
IsTagged(_Char,"UNDEAD",1)
AND
_Status == "POISONED"
THEN
DB_NOOP(1);

QRY
QRY_ABST_PoisonCheck((CHARACTERGUID)_Char,(STRING)_Status)
AND
CharacterHasTalent(_Char,"Zombie",1)
AND
_Status == "POISONED"
THEN
DB_NOOP(1);

IF
CharacterStatusAttempt((CHARACTERGUID)_Char,_,_)
AND
ObjectGetFlag(_Char,"ABST_StatusBypass",1)
THEN
ObjectClearFlag(_Char,"ABST_StatusBypass");

IF 
CharacterStatusApplied((CHARACTERGUID)_Char,(STRING)_Status,(CHARACTERGUID)_Caster)
THEN
PROC_ABST_ProcRealStatus(_Char,_Status,_Caster);

PROC
PROC_ABST_ProcRealStatus((CHARACTERGUID)_Char,(STRING)_OldStatus,(CHARACTERGUID)_Caster)
AND
DB_ABST_PhysProcStatus(_OldStatus,_NewStatus,_Real)
THEN
ObjectSetFlag(_Char,"ABST_StatusBypass");
RemoveStatus(_Char,_OldStatus);
ApplyStatus(_Char,(STRING)_NewStatus,(REAL)_Real,1,_Caster);

PROC
PROC_ABST_ProcRealStatus((CHARACTERGUID)_Char,(STRING)_OldStatus,(CHARACTERGUID)_Caster)
AND
DB_ABST_MagProcStatus(_OldStatus,_NewStatus,_Real)
THEN
ObjectSetFlag(_Char,"ABST_StatusBypass");
RemoveStatus(_Char,_OldStatus);
ApplyStatus(_Char,(STRING)_NewStatus,(REAL)_Real,1,_Caster);

// Weapon Statuses

IF
CharacterStatusApplied((CHARACTERGUID)_Char,(STRING)_Status,(CHARACTERGUID)_Source)
AND
DB_ABST_WeaponStatus(_Status,_Result,_Flag)
THEN
PROC_ABST_ApplyOrder(_Char,_Result,_Flag,_Status,_Source);

PROC
PROC_ABST_ApplyOrder((CHARACTERGUID)_Char,(STRING)_Result,(STRING)_Flag,(STRING)_Status,_)
AND
NOT DB_ABST_OrderUp(_Char,_,_Result,_,_)
AND
NOT DB_ABST_OrderUp(_Char,4,_,_,_)
AND
DB_ABST_OrderUp(_Char,3,_,_,_)
AND
GetStatusTurns(_Char,_Status,(INTEGER)_Turns)
AND
DB_ABST_RealTurns(_Turns,(REAL)_Real)
THEN
DB_ABST_OrderUp(_Char,4,_Result,_Flag,_Real);
DB_ABST_ClearMe(_Char,4,_Status);

PROC
PROC_ABST_ApplyOrder((CHARACTERGUID)_Char,(STRING)_Result,(STRING)_Flag,(STRING)_Status,_)
AND
NOT DB_ABST_OrderUp(_Char,_,_Result,_,_)
AND
NOT DB_ABST_OrderUp(_Char,3,_,_,_)
AND
DB_ABST_OrderUp(_Char,2,_,_,_)
AND
GetStatusTurns(_Char,_Status,(INTEGER)_Turns)
AND
DB_ABST_RealTurns(_Turns,(REAL)_Real)
THEN
DB_ABST_OrderUp(_Char,3,_Result,_Flag,_Real);
DB_ABST_ClearMe(_Char,3,_Status);

PROC
PROC_ABST_ApplyOrder((CHARACTERGUID)_Char,(STRING)_Result,(STRING)_Flag,(STRING)_Status,_)
AND
NOT DB_ABST_OrderUp(_Char,_,_Result,_,_)
AND
NOT DB_ABST_OrderUp(_Char,2,_,_,_)
AND
DB_ABST_OrderUp(_Char,1,_,_,_)
AND
GetStatusTurns(_Char,_Status,(INTEGER)_Turns)
AND
DB_ABST_RealTurns(_Turns,(REAL)_Real)
THEN
DB_ABST_OrderUp(_Char,2,_Result,_Flag,_Real);
DB_ABST_ClearMe(_Char,2,_Status);

PROC
PROC_ABST_ApplyOrder((CHARACTERGUID)_Char,(STRING)_Result,(STRING)_Flag,(STRING)_Status,(CHARACTERGUID)_Source)
AND
NOT DB_ABST_OrderUp(_Char,_,_Result,_Flag,_)
AND
NOT DB_ABST_OrderUp(_Char,1,_,_,_)
AND
GetUUID(_Char,(STRING)_UUID)
AND
StringConcatenate("WeaponStatusTimer",_UUID,(STRING)_Timer)
AND
GetStatusTurns(_Char,_Status,(INTEGER)_Turns)
AND
DB_ABST_RealTurns(_Turns,(REAL)_Real)
AND
QRY_ABST_AttackOrSkill()
AND
DB_ABST_WeaponTimerTime(_Time)
THEN
DB_ABST_ClearMe(_Char,1,_Status);
DB_ABST_OrderUp(_Char,1,_Result,_Flag,_Real);
DB_ABST_WeaponTimer(_Char,_Timer,_Source);
TimerLaunch(_Timer,_Time);
NOT DB_ABST_WeaponTimerTime(_Time);

QRY
QRY_ABST_AttackOrSkill()
AND
GlobalGetFlag("AttackOrSkill",1)
THEN
DB_ABST_WeaponTimerTime(1000);

QRY
QRY_ABST_AttackOrSkill()
AND
GlobalGetFlag("AttackOrSkill",0)
THEN
DB_ABST_WeaponTimerTime(350);

IF
TimerFinished(_Timer)
AND
DB_ABST_WeaponTimer(_Char,_Timer,_Source)
THEN
NOT DB_ABST_JustOne(_Char);
PROC_ABST_WeaponApply(_Char,_Source,_Timer);

PROC
PROC_ABST_WeaponApply((CHARACTERGUID)_Char,(CHARACTERGUID)_Source,(STRING)_Timer)
AND
NOT DB_ABST_JustOne(_Char)
AND
DB_ABST_OrderUp(_Char,1,_Result,_Flag,_Real)
AND
DB_ABST_ClearMe(_Char,1,_Status)
THEN
NOT DB_ABST_ClearMe(_Char,1,_Status);
RemoveStatus(_Char,(STRING)_Status);
NOT DB_ABST_OrderUp(_Char,1,_Result,_Flag,_Real);
DB_ABST_JustOne(_Char);
ObjectSetFlag(_Char,(STRING)_Flag);
ApplyStatus(_Char,(STRING)_Result,(REAL)_Real,0,_Source);
TimerLaunch(_Timer,100);

PROC
PROC_ABST_WeaponApply((CHARACTERGUID)_Char,(CHARACTERGUID)_Source,(STRING)_Timer)
AND
NOT DB_ABST_JustOne(_Char)
AND
DB_ABST_OrderUp(_Char,2,_Result,_Flag,_Real)
AND
DB_ABST_ClearMe(_Char,2,_Status)
THEN
NOT DB_ABST_ClearMe(_Char,2,_Status);
RemoveStatus(_Char,(STRING)_Status);
NOT DB_ABST_OrderUp(_Char,2,_Result,_Flag,_Real);
DB_ABST_JustOne(_Char);
ObjectSetFlag(_Char,(STRING)_Flag);
ApplyStatus(_Char,(STRING)_Result,(REAL)_Real,0,_Source);
TimerLaunch(_Timer,100);

PROC
PROC_ABST_WeaponApply((CHARACTERGUID)_Char,(CHARACTERGUID)_Source,(STRING)_Timer)
AND
NOT DB_ABST_JustOne(_Char)
AND
DB_ABST_OrderUp(_Char,3,_Result,_Flag,_Real)
AND
DB_ABST_ClearMe(_Char,3,_Status)
THEN
NOT DB_ABST_ClearMe(_Char,3,_Status);
RemoveStatus(_Char,(STRING)_Status);
NOT DB_ABST_OrderUp(_Char,3,_Result,_Flag,_Real);
DB_ABST_JustOne(_Char);
ObjectSetFlag(_Char,(STRING)_Flag);
ApplyStatus(_Char,(STRING)_Result,(REAL)_Real,0,_Source);
TimerLaunch(_Timer,100);

PROC
PROC_ABST_WeaponApply((CHARACTERGUID)_Char,(CHARACTERGUID)_Source,(STRING)_Timer)
AND
NOT DB_ABST_JustOne(_Char)
AND
DB_ABST_OrderUp(_Char,4,_Result,_Flag,_Real)
AND
DB_ABST_ClearMe(_Char,4,_Status)
THEN
NOT DB_ABST_ClearMe(_Char,4,_Status);
RemoveStatus(_Char,(STRING)_Status);
NOT DB_ABST_OrderUp(_Char,4,_Result,_Flag,_Real);
DB_ABST_JustOne(_Char);
ObjectSetFlag(_Char,(STRING)_Flag);
ApplyStatus(_Char,(STRING)_Result,(REAL)_Real,0,_Source);
TimerLaunch(_Timer,100);

PROC
PROC_ABST_WeaponApply((CHARACTERGUID)_Char,(CHARACTERGUID)_Source,(STRING)_Timer)
AND
NOT DB_ABST_JustOne(_Char)
THEN
NOT DB_ABST_WeaponTimer(_Char,_Timer,_Source);

// Aura Functions

IF
CharacterStatusApplied((CHARACTERGUID)_Char,(STRING)_Status,_)
AND
DB_ABST_AuraStatus(_Status,_,_Range)
THEN
SetVarFloat(_Char,"AuraRadius",_Range);
SetStoryEvent(_Char,"AuraActivate");

IF
ObjectTurnEnded((CHARACTERGUID)_Char)
AND
DB_ABST_AuraStatus(_Status,_,_Range)
AND
HasActiveStatus(_Char,(STRING)_Status,1)
THEN
SetVarFloat(_Char,"AuraRadius",_Range);
SetStoryEvent(_Char,"AuraActivate");

IF
ObjectTurnStarted((CHARACTERGUID)_Char)
AND
DB_ABST_AuraStatus(_Status,_,_Range)
AND
HasActiveStatus(_Char,(STRING)_Status,1)
THEN
SetVarFloat(_Char,"AuraRadius",_Range);
SetStoryEvent(_Char,"AuraActivate");

IF
CharacterCharacterEvent((CHARACTERGUID)_Target,(CHARACTERGUID)_Caster,"AuraApply")
AND
DB_ABST_AuraStatus(_Status,_Effect,_)
AND
HasActiveStatus(_Caster,(STRING)_Status,1)
THEN
ApplyStatus(_Target,(STRING)_Effect,6.0,0,_Caster);

// Dome skills

//IF
//CharacterUsedSkillAtPosition((CHARACTERGUID)_Char,(REAL)_X,(REAL)_Y,(REAL)_Z,(STRING)_Skill,_)
//AND
//DB_ABST_DomeStatus(_Skill,_Status,_Range,_LifeTime);
//THEN
//DB_ABST_DomeOwner(_Char,_Skill);
//SetVarFloat(_Char,"AuraRadius",_Range);
//SetStoryEvent(_Char,"AuraActivate");
//spawn

//IF
//ObjectTurnEnded((CHARACTERGUID)_Char)
//AND
//DB_ABST_AuraStatus(_Status,_,_Range)
//AND
//HasActiveStatus(_Char,(STRING)_Status,1)
//THEN
//SetVarFloat(_Char,"AuraRadius",_Range);
//SetStoryEvent(_Char,"AuraActivate");

//IF
//ObjectTurnStarted((CHARACTERGUID)_Char)
//AND
//DB_ABST_AuraStatus(_Status,_,_Range)
//AND
//HasActiveStatus(_Char,(STRING)_Status,1)
//THEN
//SetVarFloat(_Char,"AuraRadius",_Range);
//SetStoryEvent(_Char,"AuraActivate");

//IF
//CharacterCharacterEvent((CHARACTERGUID)_Target,(CHARACTERGUID)_Caster,"AuraApply")
//AND
//DB_ABST_AuraStatus(_Status,_Effect,_)
//AND
//HasActiveStatus(_Caster,(STRING)_Status,1)
//THEN
//ApplyStatus(_Target,(STRING)_Effect,6.0,0,_Caster);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ABST"
