Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_MT_TalentFlags((STRING)_Flag, (STRING)_WingTemplate, (STRING)_HornTemplate, (STRING)_OverheadTemplate, (STRING)_Talent);
DB_MT_TalentFlags("MT_SpillNoBlood", "MT_SpillNoBlood_Wings_25427f47-6b2b-45f3-a8e5-305c3816aa48", "MT_SpillNoBlood_Horns_fa63d5a4-0f81-4b81-90a8-9cb05a0b08d0", "MT_SpillNoBlood_Overhead_b546e271-8ef4-444c-85e2-3b392ecf4dd6", "SpillNoBlood");
DB_MT_TalentFlags("MT_Backstab", "MT_Backstab_Wings_dcb00ae2-fa76-437f-b1ad-b9d96085c5f1", "MT_Backstab_Horns_e2502878-7510-4ef9-aba4-71414521f9a4", "MT_Backstab_Overhead_9f1a9308-367c-4654-bb8e-24725e46094f", "Backstab");
DB_MT_TalentFlags("MT_Beastmaster", "MT_Beastmaster_Wings_8ac2e806-3265-4830-a815-27623d465709", "MT_Beastmaster_Horns_9f6c242d-8015-41d2-bde9-5ed8245d3a9d", "MT_Beastmaster_Overhead_b4e16940-5122-44ff-8ae7-3f95cda65a39", "Beastmaster");
DB_MT_TalentFlags("MT_Charm", "MT_Charm_Wings_6ee5ec40-ce5b-43b4-8b5d-ab521fa30fb0", "MT_Charm_Horns_4228012c-e6ce-4562-8835-1f666d82cc34", "MT_Charm_Overhead_41587833-1eef-4274-8a4d-37a2ad4ab9a3", "Charm");
DB_MT_TalentFlags("MT_ResistSilence", "MT_ResistSilence_Wings_7948ffdc-33a2-45e9-963a-0413892939cd", "MT_ResistSilence_Horns_c25b6b9e-9e8a-45e9-a136-9b4e82c08a80", "MT_ResistSilence_Overhead_e4285a88-7e7d-4f0e-b055-467b600d6c2c", "ResistSilence");
DB_MT_TalentFlags("MT_ResistKnockdown", "MT_ResistKnockdown_Wings_8cd1f913-caca-455b-8fd0-163906255aa2", "MT_ResistKnockdown_Horns_e93e24c5-b349-4220-b1f4-0b66cfa800b4", "MT_ResistKnockdown_Overhead_6d19e339-ae9b-4cb7-9393-a4617a6f000f", "ResistKnockdown");
DB_MT_TalentFlags("MT_ExtraWandCharge", "MT_ExtraWandCharge_Wings_f7475769-d014-4c9b-b739-4f30f645ccbc", "MT_ExtraWandCharge_Horns_84bfe7f2-516b-4772-a42f-7ffed38b5e0a", "MT_ExtraWandCharge_Overhead_bd18e9e4-5c13-4477-98f7-1ef3a08a0914", "ExtraWandCharge");
DB_MT_TalentFlags("MT_FolkDancer", "MT_FolkDancer_Wings_2c83957a-6518-4093-8c9f-b5e9d754548f", "MT_FolkDancer_Horns_e571a795-0d56-407a-9582-07a83d1a3e3b", "MT_FolkDancer_Overhead_4475d118-6232-4289-b307-c77019b1d1cc", "FolkDancer");
DB_MT_TalentFlags("MT_InventoryAccess", "MT_InventoryAccess_Wings_a39f3cd1-3691-4887-a298-b101ca20db2a", "MT_InventoryAccess_Horns_f79bb969-3bf2-49e8-8c54-ed2dd3d1e7d2", "MT_InventoryAccess_Overhead_bf4b900d-0d24-4545-a9b2-ea3e53210eec", "InventoryAccess");
DB_MT_TalentFlags("MT_ItemCreation", "MT_ItemCreation_Wings_334c4afd-a130-4f9b-8ef6-96615e6ef63a", "MT_ItemCreation_Horns_ec0651c4-a967-410e-8d32-0d17f7ff6f3d", "MT_ItemCreation_Overhead_d5be1074-e58e-4a13-8468-a575006c34c8", "ItemCreation");
DB_MT_TalentFlags("MT_ChanceToHitMelee", "MT_ChanceToHitMelee_Wings_5fcaca9b-e18a-417a-a841-eaa17759fe69", "MT_ChanceToHitMelee_Horns_9c7cd9b7-8661-44dc-b7aa-743848e3e239", "MT_ChanceToHitMelee_Overhead_6daa215c-95c9-4278-9543-426f3b67ac4d", "ChanceToHitMelee");

//DB_MT_BlankItems((STRING)_Slot, (STRING)_Template);
DB_MT_BlankItems("Wings", "MT_Blank_Wings_79bfe894-c4c2-4872-8a4f-deb5cd885cae");
DB_MT_BlankItems("Horns", "MT_Blank_Horns_b16e0d6b-4590-45f8-92e9-02d45cfe8004");
DB_MT_BlankItems("Overhead", "MT_Blank_Overhead_d5b1e6f6-d209-4dee-b65e-9cc6708d6d62");
KBSECTION
//===========================================================//
//                         Initiating                       *//
//===========================================================//

IF
GameStarted(_Level, _)
AND
IsCharacterCreationLevel(_Level, 0)
AND
NOT GlobalGetFlag("MT_Initialized", 1)
THEN
TimerLaunch("MT_InitializationDelay", 100);

IF
TimerFinished("MT_InitializationDelay")
THEN
IterateParties("MT_EditorChecks");

IF
StoryEvent((CHARACTERGUID)_Char, "MT_EditorChecks")
THEN
PROC_MT_AddPlaceholders(_Char);
PROC_MT_AddTestingSkills(_Char);
GlobalSetFlag("MT_Initialized");

IF
CharacterJoinedParty(_Char)
AND
DB_IsPlayer(_Char)
AND
CharacterIsSummon(_Char, 0)
THEN
PROC_MT_AddPlaceholders(_Char);

PROC
PROC_MT_AddPlaceholders((CHARACTERGUID)_Char)
AND
ObjectGetFlag(_Char, "MT_NoTalents", 0)
AND
ObjectGetFlag(_Char, "MT_OneTalent", 0)
AND
ObjectGetFlag(_Char, "MT_TwoTalents", 0)
AND
ObjectGetFlag(_Char, "MT_ThreeTalents", 0)
THEN
ItemTemplateAddTo("MT_Blank_Wings_79bfe894-c4c2-4872-8a4f-deb5cd885cae",_Char,1,0);
ItemTemplateAddTo("MT_Blank_Horns_b16e0d6b-4590-45f8-92e9-02d45cfe8004",_Char,1,0);
ItemTemplateAddTo("MT_Blank_Overhead_d5b1e6f6-d209-4dee-b65e-9cc6708d6d62",_Char,1,0);
ObjectSetFlag(_Char,"MT_NoTalents");

IF
ItemTemplateAddedToCharacter(MT_Blank_Wings_79bfe894-c4c2-4872-8a4f-deb5cd885cae,_Wings,_Char)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("EquipWings_", _UUID, _ItemTimer)
THEN
DB_MT_Equipped_Wings(_Char, _Wings, _ItemTimer);
TimerLaunch(_ItemTimer,500);

IF
ItemTemplateAddedToCharacter(MT_Blank_Horns_b16e0d6b-4590-45f8-92e9-02d45cfe8004,_Horns,_Char)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("EquipHorns_", _UUID, _ItemTimer)
THEN
DB_MT_Equipped_Horns(_Char, _Horns, _ItemTimer);
TimerLaunch(_ItemTimer,500);

IF
ItemTemplateAddedToCharacter(MT_Blank_Overhead_d5b1e6f6-d209-4dee-b65e-9cc6708d6d62,_Overhead,_Char)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("EquipOverhead_", _UUID, _ItemTimer)
THEN
DB_MT_Equipped_Overhead(_Char,_Overhead, _ItemTimer);
TimerLaunch(_ItemTimer,500);

IF 
ObjectFlagSet("MT_PointCheck",(CHARACTERGUID)_Char,_)
AND
NOT
CharacterGetTalentPoints(_Char,0)
THEN
ObjectSetFlag(_Char,"MT_HasPoint");

//===========================================================//
//                      Adding Talents                      *//
//===========================================================//

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Char, _)
AND
QRY_MT_GetItem(_Char, _Flag)
AND
DB_MT_ItemEquipped(_Char, _Item, _Template)
AND
DB_MT_TalentToAdd(_Char, _Talent, _ItemTimer)
AND
DB_MT_FlagTimer(_Char, _FlagTimer)
THEN
Transform(_Item, _Template, 0, 1, 1);
CharacterAddTalentPoint(_Char, -1);
TimerLaunch(_FlagTimer, 500);
CharacterUnequipItem(_Char, (ITEMGUID)_Item);
TimerLaunch(_ItemTimer, 500);
CharacterAddTalent(_Char, _Talent);
NOT DB_MT_ItemEquipped(_Char, _Item, _Template);
NOT DB_MT_TalentToAdd(_Char, _Talent, _ItemTimer);

QRY
QRY_MT_GetItem((CHARACTERGUID)_Char, (STRING)_Flag)
AND
ObjectGetFlag(_Char, "MT_NoTalents", 1)
AND
DB_MT_Equipped_Wings(_Char, _Item, _ItemTimer)
AND
DB_MT_TalentFlags(_Flag, _Template, _, _, _Talent)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("MT_NoToOne_", _UUID, _FlagTimer)
THEN
DB_MT_ItemEquipped(_Char, _Item, _Template);
DB_MT_TalentToAdd(_Char, _Talent, _ItemTimer);
DB_MT_FlagTimer(_Char, _FlagTimer);

QRY
QRY_MT_GetItem((CHARACTERGUID)_Char, (STRING)_Flag)
AND
ObjectGetFlag(_Char, "MT_OneTalent", 1)
AND
DB_MT_Equipped_Horns(_Char, _Item, _ItemTimer)
AND
DB_MT_TalentFlags(_Flag, _, _Template, _, _Talent)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("MT_OneToTwo_", _UUID, _FlagTimer)
THEN
DB_MT_ItemEquipped(_Char, _Item, _Template);
DB_MT_TalentToAdd(_Char, _Talent, _ItemTimer);
DB_MT_FlagTimer(_Char, _FlagTimer);

QRY
QRY_MT_GetItem((CHARACTERGUID)_Char, (STRING)_Flag)
AND
ObjectGetFlag(_Char, "MT_TwoTalents", 1)
AND
DB_MT_Equipped_Overhead(_Char, _Item, _ItemTimer)
AND
DB_MT_TalentFlags(_Flag, _, _, _Template, _Talent)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("MT_TwoToThree_", _UUID, _FlagTimer)
THEN
DB_MT_ItemEquipped(_Char, _Item, _Template);
DB_MT_TalentToAdd(_Char, _Talent, _ItemTimer);
DB_MT_FlagTimer(_Char, _FlagTimer);

//===========================================================//
//                     Removing Talents                     *//
//===========================================================//

IF
ObjectFlagSet("MT_RefundTalents", (CHARACTERGUID)_Char, _ID)
AND
QRY_MT_NumberOfTalents(_Char)
AND
DB_MT_RefundTalentPoint(_Char, _Points)
AND
GetUUID(_Char, _UUID)
AND
StringConcatenate("MT_AnyToNone_", _UUID, _FlagTimer)
THEN
PROC_MT_RemoveTalents(_Char);
PROC_MT_TransformItems(_Char);
CharacterAddTalentPoint(_Char, _Points);
DB_MT_FlagTimer(_Char, _FlagTimer);
TimerLaunch(_FlagTimer, 500);
NOT DB_MT_RefundTalentPoint(_Char, _Points);
ObjectClearFlag(_Char, "MT_RefundTalents");
	
PROC
PROC_MT_RemoveTalents((CHARACTERGUID)_Char)
AND
DB_MT_TalentFlags(_Flag, _, _, _, _Talent)
THEN
CharacterRemoveTalent(_Char, _Talent);
ObjectClearFlag(_Char, _Flag);

PROC
PROC_MT_TransformItems((CHARACTERGUID)_Char)
AND
DB_MT_Equipped_Wings(_Char, _Item, _ItemTimer)
AND
DB_MT_BlankItems("Wings", _Template)
THEN
Transform(_Item, _Template, 0, 1, 1);
CharacterUnequipItem(_Char, _Item);
TimerLaunch(_ItemTimer, 500);

PROC
PROC_MT_TransformItems((CHARACTERGUID)_Char)
AND
DB_MT_Equipped_Horns(_Char, _Item, _ItemTimer)
AND
DB_MT_BlankItems("Horns", _Template)
THEN
Transform(_Item, _Template, 0, 1, 1);
CharacterUnequipItem(_Char, _Item);
TimerLaunch(_ItemTimer, 500);

PROC
PROC_MT_TransformItems((CHARACTERGUID)_Char)
AND
DB_MT_Equipped_Overhead(_Char, _Item, _ItemTimer)
AND
DB_MT_BlankItems("Overhead", _Template)
THEN
Transform(_Item, _Template, 0, 1, 1);
CharacterUnequipItem(_Char, _Item);
TimerLaunch(_ItemTimer, 500);
	
QRY
QRY_MT_NumberOfTalents((CHARACTERGUID)_Char)
AND
ObjectGetFlag(_Char, "MT_OneTalent", 1)
THEN
DB_MT_RefundTalentPoint(_Char, 1);

QRY
QRY_MT_NumberOfTalents((CHARACTERGUID)_Char)
AND
ObjectGetFlag(_Char, "MT_TwoTalents", 1)
THEN
DB_MT_RefundTalentPoint(_Char, 2);

QRY
QRY_MT_NumberOfTalents((CHARACTERGUID)_Char)
AND
ObjectGetFlag(_Char, "MT_ThreeTalents", 1)
THEN
DB_MT_RefundTalentPoint(_Char, 3);

//===========================================================//
//                      Flag Timers                         *//
//===========================================================//

IF
TimerFinished(_FlagTimer)
AND
DB_MT_FlagTimer(_Char, _FlagTimer)
AND
StringContains(_FlagTimer, "MT_NoToOne", 1)
THEN
ObjectClearFlag(_Char,"MT_NoTalents");
ObjectSetFlag(_Char,"MT_OneTalent");
NOT	DB_MT_FlagTimer(_Char, _FlagTimer);

IF
TimerFinished(_FlagTimer)
AND
DB_MT_FlagTimer(_Char, _FlagTimer)
AND
StringContains(_FlagTimer, "MT_OneToTwo", 1)
THEN
ObjectClearFlag(_Char,"MT_OneTalent");
ObjectSetFlag(_Char,"MT_TwoTalents");
NOT	DB_MT_FlagTimer(_Char, _FlagTimer);

IF
TimerFinished(_FlagTimer)
AND
DB_MT_FlagTimer(_Char, _FlagTimer)
AND
StringContains(_FlagTimer, "MT_TwoToThree", 1)
THEN
ObjectClearFlag(_Char,"MT_TwoTalents");
ObjectSetFlag(_Char,"MT_ThreeTalents");
NOT	DB_MT_FlagTimer(_Char, _FlagTimer);

IF
TimerFinished(_FlagTimer)
AND
DB_MT_FlagTimer(_Char, _FlagTimer)
AND
StringContains(_FlagTimer, "MT_AnyToNone", 1)
THEN
ObjectClearFlag(_Char,"MT_OneTalent");
ObjectClearFlag(_Char,"MT_TwoTalents");
ObjectClearFlag(_Char,"MT_ThreeTalents");
ObjectSetFlag(_Char,"MT_NoTalents");
NOT	DB_MT_FlagTimer(_Char, _FlagTimer);

//===========================================================//
//                      Item Timers                         *//
//===========================================================//

IF
TimerFinished(_TimerName)
AND
DB_MT_Equipped_Wings(_Char,_Wings,_TimerName)
THEN
CharacterEquipItem(_Char,_Wings);

IF
TimerFinished(_TimerName)
AND
DB_MT_Equipped_Horns(_Char,_Horns,_TimerName)
THEN
CharacterEquipItem(_Char,_Horns);

IF
TimerFinished(_TimerName)
AND
DB_MT_Equipped_Overhead(_Char,_Overhead,_TimerName)
THEN
CharacterEquipItem(_Char,_Overhead);

//===========================================================//
//                      Dialog Helpers                      *//
//===========================================================//

IF 
CharacterCharacterEvent(_Char,_Char,"MT_ScoreAbilities")
AND 
CharacterGetBaseAbility(_Char,"RogueLore",_RogueLore)
AND 
CharacterGetBaseAbility(_Char,"WarriorLore",_WarriorLore)
AND 
CharacterGetBaseAbility(_Char,"RangerLore",_RangerLore)
AND 
CharacterGetBaseAbility(_Char,"FireSpecialist",_FireSpecialist)
AND 
CharacterGetBaseAbility(_Char,"WaterSpecialist",_WaterSpecialist)
AND 
CharacterGetBaseAbility(_Char,"EarthSpecialist",_EarthSpecialist)
AND 
CharacterGetBaseAbility(_Char,"AirSpecialist",_AirSpecialist)
AND 
CharacterGetBaseAbility(_Char,"Necromancy",_Necromancy)
AND 
CharacterGetBaseAbility(_Char,"Polymorph",_Polymorph)
AND 
CharacterGetBaseAbility(_Char,"Summoning",_Summoning)
THEN 
SetVarInteger(_Char,"RogueLore",_RogueLore); 
SetVarInteger(_Char,"WarriorLore",_WarriorLore); 
SetVarInteger(_Char,"RangerLore",_RangerLore); 
SetVarInteger(_Char,"FireSpecialist",_FireSpecialist); 
SetVarInteger(_Char,"WaterSpecialist",_WaterSpecialist); 
SetVarInteger(_Char,"EarthSpecialist",_EarthSpecialist); 
SetVarInteger(_Char,"AirSpecialist",_AirSpecialist); 
SetVarInteger(_Char,"Necromancy",_Necromancy); 
SetVarInteger(_Char,"Polymorph",_Polymorph); 
SetVarInteger(_Char,"Summoning",_Summoning);
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "MoreTalents"
